- name: DHCP VNFD
  shell: |
    cat > /etc/default/isc-dhcp-server << EOF
    DHCPD_CONF="-cf /etc/dhcp/dhcpd.conf"
    DHCPD_PID="-pf /etc/dhcp/dhcpd.pid"
    INTERFACES="{{ DHCP_interfaceName }}"
    EOF
    cat > /etc/dhcp/dhcpd.conf << EOF
    default-lease-time {{ DHCP_defaultLeaseTime }};
    max-lease-time {{ DHCP_maxLeaseTime }};
    ddns-update-style none;
    authoritative;
    subnet {{ DHCP_internalNetCidr | ipaddr('network') }} netmask {{ DHCP_internalNetCidr | ipaddr('netmask') }} {
        option routers {{ DHCP_gateway }};
        option broadcast-address {{ DHCP_internalNetCidr |  ipaddr('broadcast') }};
        range {{ DHCP_rangeStart }} {{ DHCP_rangeEnd }};
    }
    EOF
  become: yes
  when: DHCP_internalNetCidr is defined

- os_port_facts:
    filters:
      name: "{{ item.value }}"
  register: result
  delegate_to: localhost
  with_dict: "{{ DHCP_staticHosts }}"
  when: DHCP_staticHosts is defined

- name: DHCP VNFD
  shell: |
    cat >> /etc/dhcp/dhcpd.conf << EOF
    host {{ item.ansible_facts.openstack_ports[0].name }} {
        hardware ethernet {{ item.ansible_facts.openstack_ports[0].mac_address }};
        fixed-address {{ item.ansible_facts.openstack_ports[0].fixed_ips[0].ip_address }};
    }
    EOF
  with_items: "{{ result.results }}"
  when: DHCP_internalNetCidr is defined
  become: yes

- name: Restart service dhcpd
  systemd:
    state: restarted
    daemon_reload: yes
    name: dhcpd
  when: DHCP_internalNetCidr is defined
  become: yes


